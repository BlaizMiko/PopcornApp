package com.blaizmiko.popcornapp.data.db.models.movies;

import com.blaizmiko.popcornapp.data.models.cinema.BaseCinemaModel;
import com.blaizmiko.popcornapp.ui.all.adapters.TileAdapter;
import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
import java.util.ArrayList;
import java.util.List;
import io.objectbox.annotation.Backlink;
import io.objectbox.annotation.Entity;
import io.objectbox.annotation.Id;
import io.objectbox.annotation.Generated;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.relation.ToMany;
import io.objectbox.BoxStore;

@Entity
public class DetailedMovieDBModel{
/*    @Relation()
    private MoviesResponseDBModel moviesResponseDBModel;
    private long moviesResponseDBModelId;*/
    @Expose
    @Id(assignable = true)
    @SerializedName("id")
    private long id;
    @Expose
    @SerializedName("poster_path")
    private String posterPath;
    @Expose
    @SerializedName("title")
    private String title;
    @Expose
    @SerializedName("vote_average")
    private double voteAverage;
    @Expose
    @SerializedName("backdrop_path")
    private String backdropPath;
    @Expose
    @SerializedName("overview")
    private String overview;
    @Expose
    @SerializedName("release_date")
    private String releaseDate;
    @Expose
    @SerializedName("budget")
    private int budget;
    @Expose
    @SerializedName("imdb_id")
    private String imdbId;
    @Expose
    @SerializedName("revenue")
    private int revenue;
    @Expose
    @SerializedName("runtime")
    private int runtime;
    @Backlink
    @Expose(deserialize = false, serialize = false)
    public List<GenreDBModel> genres = new ToMany<>(this, DetailedMovieDBModel_.genres);
    @Backlink
    @Expose(deserialize = false, serialize = false)
    public List<ImageDBModel> posters = new ToMany<>(this, DetailedMovieDBModel_.posters);
    @Backlink
    @Expose(deserialize = false, serialize = false)
    public List<ImageDBModel> backdrops = new ToMany<>(this, DetailedMovieDBModel_.backdrops);
    @Backlink
    public List<VideoDBModel> videosList = new ToMany<>(this, DetailedMovieDBModel_.videosList);
    /** Used to resolve relations */
    @Internal
    @Generated(1307364262)
    transient BoxStore __boxStore;


    public DetailedMovieDBModel(final TileAdapter.Item item) {
        this.title = item.getTitle();
        this.backdropPath = item.getBackdropUrl();
        this.id = item.getId();
        this.posterPath = item.getPosterUrl();
        this.voteAverage = item.getRating();
    }

    @Generated(2128791128)
    @Internal
    /** This constructor was generated by ObjectBox and may change any time. */
    public DetailedMovieDBModel(long id, String posterPath, String title, double voteAverage, String backdropPath,
            String overview, String releaseDate, int budget, String imdbId, int revenue, int runtime) {
        this.id = id;
        this.posterPath = posterPath;
        this.title = title;
        this.voteAverage = voteAverage;
        this.backdropPath = backdropPath;
        this.overview = overview;
        this.releaseDate = releaseDate;
        this.budget = budget;
        this.imdbId = imdbId;
        this.revenue = revenue;
        this.runtime = runtime;
    }

    @Generated(60458136)
    public DetailedMovieDBModel() {
    }

    public long getId() {
        return id;
    }
    public void setId(long id) {
        this.id = id;
    }

    public String getPosterPath() {
        return posterPath;
    }
    public void setPosterPath(String posterPath) {
        this.posterPath = posterPath;
    }

    public String getTitle() {
        return title;
    }
    public void setTitle(String title) {
        this.title = title;
    }

    public double getVoteAverage() {
        return voteAverage;
    }
    public void setVoteAverage(double voteAverage) {
        this.voteAverage = voteAverage;
    }

    public String getBackdropPath() {
        return backdropPath;
    }
    public void setBackdropPath(String backdropPath) {
        this.backdropPath = backdropPath;
    }

    public String getOverview() {
        return overview;
    }
    public void setOverview(String overview) {
        this.overview = overview;
    }

    public String getReleaseDate() {
        return releaseDate;
    }
    public void setReleaseDate(String releaseDate) {
        this.releaseDate = releaseDate;
    }

    public int getBudget() {
        return budget;
    }
    public void setBudget(int budget) {
        this.budget = budget;
    }

    public String getImdbId() {
        return imdbId;
    }
    public void setImdbId(String imdbId) {
        this.imdbId = imdbId;
    }

    public int getRevenue() {
        return revenue;
    }
    public void setRevenue(int revenue) {
        this.revenue = revenue;
    }

    public int getRuntime() {
        return runtime;
    }
    public void setRuntime(int runtime) {
        this.runtime = runtime;
    }

    public List<GenreDBModel> getGenres() {
        return genres;
    }
    public void setGenres(List<GenreDBModel> genres) {
        this.genres = genres;
    }

    public List<ImageDBModel> getPosters() {
        return posters;
    }
    public void setPosters(List<ImageDBModel> posters) {
        this.posters = posters;
    }

    public List<ImageDBModel> getBackdrops() {
        return backdrops;
    }
    public void setBackdrops(List<ImageDBModel> backdrops) {
        this.backdrops = backdrops;
    }

    public List<VideoDBModel> getVideos() {
        return videosList;
    }
    public void setVideos(List<VideoDBModel> videos) {
        this.videosList = videos;
    }
}

