package com.blaizmiko.popcornapp.data.db.models.movies;

import com.blaizmiko.popcornapp.data.models.cinema.BaseCinemaModel;
import com.blaizmiko.popcornapp.ui.all.adapters.TileAdapter;

import java.util.ArrayList;
import java.util.List;
import io.objectbox.annotation.Backlink;
import io.objectbox.annotation.Entity;
import io.objectbox.annotation.Id;
import io.objectbox.annotation.Generated;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.BoxStore;
import io.objectbox.relation.ToMany;

@Entity
public class DetailedMovieDBModel {
    @Id(assignable = true)
    long id;
    String posterPath;
    public String title;
    double voteAverage;
    String backdropPath;
    String overview;
    String releaseDate;
    int budget;
    String imdbId;
    int revenue;
    int runtime;
    @Backlink
    public List<GenreDBModel> genres = new ToMany<>(this, DetailedMovieDBModel_.genres);
    @Backlink
    List<ImageDBModel> posters = new ToMany<>(this, DetailedMovieDBModel_.posters);
    @Backlink
    List<ImageDBModel> backdrops = new ToMany<>(this, DetailedMovieDBModel_.backdrops);
    @Backlink
    List<VideoDBModel> videos = new ToMany<>(this, DetailedMovieDBModel_.videos);
    int lastUpdateDate;
    /** Used to resolve relations */
    @Internal
    @Generated(1307364262)
    transient BoxStore __boxStore;
    @Generated(1565640978)
    @Internal
    /** This constructor was generated by ObjectBox and may change any time. */
    public DetailedMovieDBModel(long id, String posterPath, String title, double voteAverage,
            String backdropPath, String overview, String releaseDate, int budget, String imdbId,
            int revenue, int runtime, int lastUpdateDate) {
        this.id = id;
        this.posterPath = posterPath;
        this.title = title;
        this.voteAverage = voteAverage;
        this.backdropPath = backdropPath;
        this.overview = overview;
        this.releaseDate = releaseDate;
        this.budget = budget;
        this.imdbId = imdbId;
        this.revenue = revenue;
        this.runtime = runtime;
        this.lastUpdateDate = lastUpdateDate;
    }
    @Generated(60458136)
    public DetailedMovieDBModel() {
    }

    public DetailedMovieDBModel(BaseCinemaModel baseCinemaModel) {
        this.title = baseCinemaModel.getTitle();
        this.backdropPath = baseCinemaModel.getBackdropPath();
        this.id = baseCinemaModel.getId();
        this.posterPath = baseCinemaModel.getPosterPath();
        this.voteAverage = baseCinemaModel.getVoteAverage();
    }

    public DetailedMovieDBModel(final TileAdapter.Item item) {
        this.title = item.getTitle();
        this.backdropPath = item.getBackdropUrl();
        this.id = item.getId();
        this.posterPath = item.getPosterUrl();
        this.voteAverage = item.getRating();
    }

    public static List<DetailedMovieDBModel> fromTileAdapterItem(final List<TileAdapter.Item> items) {
        final List<DetailedMovieDBModel> resultList = new ArrayList<>(items.size());
        for (TileAdapter.Item item : items) {
            resultList.add(new DetailedMovieDBModel(item));
        }
        return resultList;
    }
}

